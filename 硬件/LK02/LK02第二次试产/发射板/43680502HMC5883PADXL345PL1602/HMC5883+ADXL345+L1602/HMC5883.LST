C51 COMPILER V9.00   HMC5883                                                               07/28/2014 15:18:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HMC5883
OBJECT MODULE PLACED IN HMC5883.OBJ
COMPILER INVOKED BY: D:\KEIL 4\C51\BIN\C51.EXE HMC5883.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include  <INTRINS.H>
   2          #include  <REG51.H>
   3          #include  <stdio.h>
   4          #include "HMC5883.h"    
   5          #include "1602.h"
   6          
   7          
   8          sbit      SCL=P2^0;      //IIC时钟引脚定义
   9          sbit      SDA=P2^1;      //IIC数据引脚定义
  10          
  11          #define SlaveAddress   0x3C   //定义器件在IIC总线中的从地址
  12          
  13          typedef unsigned short WORD;
  14          
  15          BYTE BUF[8];                         //接收数据缓存区           
  16          uchar ge,shi,bai,qian,wan;           //显示变量
  17          
  18          /**************************************
  19          延时5微秒(STC90C52RC@12M)
  20          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
  21          当改用1T的MCU时,请调整此延时函数
  22          **************************************/
  23          void Delay5us()
  24          {
  25   1          _nop_();
  26   1              _nop_();
  27   1              _nop_();
  28   1              _nop_();
  29   1          _nop_();
  30   1      }
  31          
  32          /**************************************
  33          延时5毫秒(STC90C52RC@12M)
  34          不同的工作环境,需要调整此函数
  35          当改用1T的MCU时,请调整此延时函数
  36          **************************************/
  37          void Delay5ms()
  38          {
  39   1          WORD n = 560;
  40   1      
  41   1          while (n--);
  42   1      }
  43          
  44          /**************************************
  45          起始信号
  46          **************************************/
  47          void HMC5883_Start()
  48          {
  49   1          SDA = 1;                    //拉高数据线
  50   1          SCL = 1;                    //拉高时钟线
  51   1          Delay5us();                 //延时
  52   1          SDA = 0;                    //产生下降沿
  53   1          Delay5us();                 //延时
  54   1          SCL = 0;                    //拉低时钟线
  55   1      }
C51 COMPILER V9.00   HMC5883                                                               07/28/2014 15:18:00 PAGE 2   

  56          
  57          /**************************************
  58          停止信号
  59          **************************************/
  60          void HMC5883_Stop()
  61          {
  62   1          SDA = 0;                    //拉低数据线
  63   1          SCL = 1;                    //拉高时钟线
  64   1          Delay5us();                 //延时
  65   1          SDA = 1;                    //产生上升沿
  66   1          Delay5us();                 //延时
  67   1      }
  68          
  69          /**************************************
  70          发送应答信号
  71          入口参数:ack (0:ACK 1:NAK)
  72          **************************************/
  73          void HMC5883_SendACK(bit ack)
  74          {
  75   1          SDA = ack;                  //写应答信号
  76   1          SCL = 1;                    //拉高时钟线
  77   1          Delay5us();                 //延时
  78   1          SCL = 0;                    //拉低时钟线
  79   1          Delay5us();                 //延时
  80   1      }
  81          
  82          /**************************************
  83          接收应答信号
  84          **************************************/
  85          bit HMC5883_RecvACK()
  86          {
  87   1          SCL = 1;                    //拉高时钟线
  88   1          Delay5us();                 //延时
  89   1          CY = SDA;                   //读应答信号
  90   1          SCL = 0;                    //拉低时钟线
  91   1          Delay5us();                 //延时
  92   1      
  93   1          return CY;
  94   1      }
  95          
  96          /**************************************
  97          向IIC总线发送一个字节数据
  98          **************************************/
  99          void HMC5883_SendByte(BYTE dat)
 100          {
 101   1          BYTE i;
 102   1      
 103   1          for (i=0; i<8; i++)         //8位计数器
 104   1          {
 105   2              dat <<= 1;              //移出数据的最高位
 106   2              SDA = CY;               //送数据口
 107   2              SCL = 1;                //拉高时钟线
 108   2              Delay5us();             //延时
 109   2              SCL = 0;                //拉低时钟线
 110   2              Delay5us();             //延时
 111   2          }
 112   1          HMC5883_RecvACK();
 113   1      }
 114          
 115          /**************************************
 116          从IIC总线接收一个字节数据
 117          **************************************/
C51 COMPILER V9.00   HMC5883                                                               07/28/2014 15:18:00 PAGE 3   

 118          BYTE HMC5883_RecvByte()
 119          {
 120   1          BYTE i;
 121   1          BYTE dat = 0;
 122   1      
 123   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 124   1          for (i=0; i<8; i++)         //8位计数器
 125   1          {
 126   2              dat <<= 1;
 127   2              SCL = 1;                //拉高时钟线
 128   2              Delay5us();             //延时
 129   2              dat |= SDA;             //读数据               
 130   2              SCL = 0;                //拉低时钟线
 131   2              Delay5us();             //延时
 132   2          }
 133   1          return dat;
 134   1      }
 135          
 136          //***************************************************
 137          
 138          void Single_Write_HMC5883(uchar REG_Address,uchar REG_data)
 139          {
 140   1          HMC5883_Start();                  //起始信号
 141   1          HMC5883_SendByte(SlaveAddress);   //发送设备地址+写信号
 142   1          HMC5883_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf 
 143   1          HMC5883_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf
 144   1          HMC5883_Stop();                   //发送停止信号
 145   1      }
 146          
 147          ////********单字节读取内部寄存器*************************
 148          //uchar Single_Read_HMC5883(uchar REG_Address)
 149          //{  uchar REG_data;
 150          //    HMC5883_Start();                          //起始信号
 151          //    HMC5883_SendByte(SlaveAddress);           //发送设备地址+写信号
 152          //    HMC5883_SendByte(REG_Address);                   //发送存储单元地址，从0开始    
 153          //    HMC5883_Start();                          //起始信号
 154          //    HMC5883_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 155          //    REG_data=HMC5883_RecvByte();              //读出寄存器数据
 156          //    HMC5883_SendACK(1);   
 157          //    HMC5883_Stop();                           //停止信号
 158          //    return REG_data; 
 159          //}
 160          //******************************************************
 161          //
 162          //连续读出HMC5883内部角度数据，地址范围0x3~0x5
 163          //
 164          //******************************************************
 165          void Multiple_read_HMC5883(void)
 166          {   uchar i;
 167   1          HMC5883_Start();                          //起始信号
 168   1          HMC5883_SendByte(SlaveAddress);           //发送设备地址+写信号
 169   1          HMC5883_SendByte(0x03);                   //发送存储单元地址，从0x32开始    
 170   1          HMC5883_Start();                          //起始信号
 171   1          HMC5883_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 172   1           for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 173   1          {
 174   2              BUF[i] = HMC5883_RecvByte();          //BUF[0]存储0x32地址中的数据
 175   2              if (i == 5)
 176   2              {
 177   3                 HMC5883_SendACK(1);                //最后一个数据需要回NOACK
 178   3              }
 179   2              else
C51 COMPILER V9.00   HMC5883                                                               07/28/2014 15:18:00 PAGE 4   

 180   2              {
 181   3                HMC5883_SendACK(0);                //回应ACK
 182   3             }
 183   2         }
 184   1          HMC5883_Stop();                          //停止信号
 185   1          Delay5ms();
 186   1      }
 187          
 188          //初始化HMC5883，根据需要请参考pdf进行修改****
 189          void Init_HMC5883()
 190          {
 191   1           Single_Write_HMC5883(0x02,0x00);  //
 192   1      }
 193          
 194          //*********************************************************
 195          void conversion(uint temp_data)  
 196          {  
 197   1          wan=temp_data/10000;
 198   1          temp_data=temp_data%10000;   //取余运算
 199   1          qian=temp_data/1000;
 200   1          temp_data=temp_data%1000;    //取余运算
 201   1          bai=temp_data/100;
 202   1          temp_data=temp_data%100;     //取余运算
 203   1          shi=temp_data/10;
 204   1          temp_data=temp_data%10;      //取余运算
 205   1          ge=temp_data; 
 206   1              
 207   1              write_com(0x80);
 208   1          write_data('A');
 209   1          write_com(0x81);
 210   1          write_data(':');
 211   1          write_com(0x82);
 212   1          write_data(0X30+qian);
 213   1          write_com(0x83);
 214   1          write_data(0X30+bai);
 215   1          write_com(0x84);
 216   1          write_data(0X30+shi);
 217   1          write_com(0x85);
 218   1          write_data('.');
 219   1          write_com(0x86);
 220   1          write_data(0X30+ge); 
 221   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    406    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
