C51 COMPILER V9.00   ADXL345                                                               07/28/2014 16:08:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADXL345
OBJECT MODULE PLACED IN ADXL345.OBJ
COMPILER INVOKED BY: D:\KEIL 4\C51\BIN\C51.EXE ADXL345.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include  <REG51.H>             
   2          #include  <INTRINS.H>
   3          #include  "ADXL345.h"
   4          #include  "1602.h"
   5          
   6          #define   uchar unsigned char
   7          #define   uint unsigned int     
   8          sbit      SCL=P2^2;      //IIC时钟引脚定义
   9          sbit      SDA=P2^3;      //IIC数据引脚定义
  10          
  11          uchar m,n;
  12          typedef unsigned char  BYTE;                                                       
  13          typedef unsigned short WORD;
  14          
  15          BYTE BUF1[8];                         //接收数据缓存区          
  16          
  17          int  dis_data;                       //变量
  18          
  19          /**************************************
  20          延时5微秒(STC90C52RC@12M)
  21          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
  22          当改用1T的MCU时,请调整此延时函数
  23          **************************************/
  24          void Delay5u()
  25          {
  26   1          _nop_();_nop_();_nop_();_nop_();
  27   1          _nop_();_nop_();_nop_();_nop_();
  28   1              _nop_();_nop_();_nop_();_nop_();
  29   1      }
  30          
  31          /**************************************
  32          延时5毫秒(STC90C52RC@12M)
  33          不同的工作环境,需要调整此函数
  34          当改用1T的MCU时,请调整此延时函数
  35          **************************************/
  36          void Delay5m()
  37          {
  38   1          WORD n = 560;
  39   1      
  40   1          while (n--);
  41   1      }
  42          
  43          /**************************************
  44          起始信号
  45          **************************************/
  46          void ADXL345_Start()
  47          {
  48   1          SDA = 1;                    //拉高数据线
  49   1          SCL = 1;                    //拉高时钟线
  50   1          Delay5u();                 //延时
  51   1          SDA = 0;                    //产生下降沿
  52   1          Delay5u();                 //延时
  53   1          SCL = 0;                    //拉低时钟线
  54   1      }
  55          
C51 COMPILER V9.00   ADXL345                                                               07/28/2014 16:08:34 PAGE 2   

  56          /**************************************
  57          停止信号
  58          **************************************/
  59          void ADXL345_Stop()
  60          {
  61   1          SDA = 0;                    //拉低数据线
  62   1          SCL = 1;                    //拉高时钟线
  63   1          Delay5u();                 //延时
  64   1          SDA = 1;                    //产生上升沿
  65   1          Delay5u();                 //延时
  66   1      }
  67          
  68          /**************************************
  69          发送应答信号
  70          入口参数:ack (0:ACK 1:NAK)
  71          **************************************/
  72          void ADXL345_SendACK(bit ack)
  73          {
  74   1          SDA = ack;                  //写应答信号
  75   1          SCL = 1;                    //拉高时钟线
  76   1          Delay5u();                 //延时
  77   1          SCL = 0;                    //拉低时钟线
  78   1          Delay5u();                 //延时
  79   1      }
  80          
  81          /**************************************
  82          接收应答信号
  83          **************************************/
  84          bit ADXL345_RecvACK()
  85          {
  86   1          SCL = 1;                    //拉高时钟线
  87   1          Delay5u();                 //延时
  88   1          CY = SDA;                   //读应答信号
  89   1          SCL = 0;                    //拉低时钟线
  90   1          Delay5u();                 //延时
  91   1          return CY;
  92   1      }
  93          
  94          /**************************************
  95          向IIC总线发送一个字节数据
  96          **************************************/
  97          void ADXL345_SendByte(BYTE dat)
  98          {
  99   1          BYTE i;
 100   1      
 101   1          for (i=0; i<8; i++)         //8位计数器
 102   1          {
 103   2              dat <<= 1;              //移出数据的最高位
 104   2              SDA = CY;               //送数据口
 105   2              SCL = 1;                //拉高时钟线
 106   2              Delay5u();             //延时
 107   2              SCL = 0;                //拉低时钟线
 108   2              Delay5u();             //延时
 109   2          }
 110   1          ADXL345_RecvACK();
 111   1      }
 112          
 113          /**************************************
 114          从IIC总线接收一个字节数据
 115          **************************************/
 116          BYTE ADXL345_RecvByte()
 117          {
C51 COMPILER V9.00   ADXL345                                                               07/28/2014 16:08:34 PAGE 3   

 118   1          BYTE i;
 119   1          BYTE dat = 0;
 120   1      
 121   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 122   1          for (i=0; i<8; i++)         //8位计数器
 123   1          {
 124   2              dat <<= 1;
 125   2              SCL = 1;                //拉高时钟线
 126   2              Delay5u();             //延时
 127   2              dat |= SDA;             //读数据               
 128   2              SCL = 0;                //拉低时钟线
 129   2              Delay5u();             //延时
 130   2          }
 131   1          return dat;
 132   1      }
 133          
 134          //******单字节写入*******************************************
 135          
 136          void Single_Write(uchar SlaveAddress,uchar REG_Address,uchar REG_data)
 137          {
 138   1          ADXL345_Start();                  //起始信号
 139   1          ADXL345_SendByte(SlaveAddress);   //发送设备地址+写信号
 140   1          ADXL345_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 141   1          ADXL345_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 142   1          ADXL345_Stop();                   //发送停止信号
 143   1      }
 144          
 145          //********单字节读取*****************************************
 146          uchar Single_Read(uchar SlaveAddress,uchar REG_Address)
 147          {  
 148   1              uchar REG_data;
 149   1          ADXL345_Start();                          //起始信号
 150   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 151   1          ADXL345_SendByte(REG_Address);                   //发送存储单元地址，从0开始        
 152   1          ADXL345_Start();                          //起始信号
 153   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 154   1          REG_data=ADXL345_RecvByte();              //读出寄存器数据
 155   1              ADXL345_SendACK(1);   
 156   1              ADXL345_Stop();                           //停止信号
 157   1          return REG_data; 
 158   1      }
 159          //*********************************************************
 160          //
 161          //连续读出ADXL345内部加速度数据，地址范围0x32~0x37
 162          //
 163          //*********************************************************
 164          void Multiple_read(uchar SlaveAddress,uchar ST_Address)
 165          {   uchar i;
 166   1          ADXL345_Start();                          //起始信号
 167   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 168   1          ADXL345_SendByte(ST_Address);                   //发送存储单元地址，从0x32开始      
 169   1          ADXL345_Start();                          //起始信号
 170   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 171   1               for (i=0; i<7; i++)                      //连续读取6个地址数据，存储中BUF
 172   1          {
 173   2              BUF1[i] = ADXL345_RecvByte();          //BUF[0]存储0x32地址中的数据
 174   2              if (i == 6)
 175   2              {
 176   3                 ADXL345_SendACK(1);                //最后一个数据需要回NOACK
 177   3              }
 178   2              else
 179   2              {
C51 COMPILER V9.00   ADXL345                                                               07/28/2014 16:08:34 PAGE 4   

 180   3                ADXL345_SendACK(0);                //回应ACK
 181   3             }
 182   2         }
 183   1          ADXL345_Stop();                          //停止信号
 184   1          Delay5m();
 185   1      }
 186          
 187          //*****************************************************************
 188          
 189          //初始化ADXL345，根据需要请参考pdf进行修改************************
 190          void Init_ADXL345()
 191          {
 192   1         Single_Write(ADXL345_SlaveAddress,0x31,0x0B);   //测量范围,正负16g，13位模式
 193   1         Single_Write(ADXL345_SlaveAddress,0x2C,0x08);   //速率设定为12.5 参考pdf13页
 194   1         Single_Write(ADXL345_SlaveAddress,0x2D,0x08);   //选择电源模式   参考pdf24页
 195   1         Single_Write(ADXL345_SlaveAddress,0x2E,0x80);   //使能 DATA_READY 中断
 196   1         Single_Write(ADXL345_SlaveAddress,0x1E,0x00);   //X 偏移量 根据测试传感器的状态写入pdf29页
 197   1         Single_Write(ADXL345_SlaveAddress,0x1F,0x00);   //Y 偏移量 根据测试传感器的状态写入pdf29页
 198   1         Single_Write(ADXL345_SlaveAddress,0x20,0x05);   //Z 偏移量 根据测试传感器的状态写入pdf29页
 199   1      }
 200          
 201          void conversion1(uint temp_data)  
 202          {  
 203   1          temp_data=temp_data%10000;   //取余运算
 204   1              m=temp_data/1000;
 205   1          temp_data=temp_data%1000;    //取余运算
 206   1          n=temp_data/100;    
 207   1      }
 208          
 209          //***********************************************************************
 210          //显示x轴
 211          void display_x()
 212          {   
 213   1              float temp;
 214   1          dis_data=(BUF1[1]<<8)+BUF1[0];  //合成数据   
 215   1              if(dis_data<0)
 216   1              {
 217   2                      dis_data=-dis_data;
 218   2                      write_com(0x80+10);
 219   2                  write_data('-');   //显示正负符号位
 220   2              }
 221   1              else 
 222   1              write_com(0x80+10);
 223   1          write_data(' '); //显示空格
 224   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 225   1          conversion1(temp);          //转换出显示需要的数据
 226   1      
 227   1              write_com(0x80+8);
 228   1          write_data('X'); 
 229   1              write_com(0x80+9);
 230   1          write_data(':');
 231   1              write_com(0x80+11);
 232   1          write_data(m+0x30);
 233   1              write_com(0x80+12);
 234   1          write_data('.');
 235   1              write_com(0x80+13);
 236   1          write_data(n+0x30);
 237   1              write_com(0x80+14);
 238   1          write_data('g');
 239   1      }
 240          
 241          //***********************************************************************
C51 COMPILER V9.00   ADXL345                                                               07/28/2014 16:08:34 PAGE 5   

 242          //显示y轴
 243          void display_y()
 244          {     
 245   1              float temp;
 246   1          dis_data=(BUF1[3]<<8)+BUF1[2];  //合成数据   
 247   1              if(dis_data<0)
 248   1              {
 249   2                      dis_data=-dis_data;
 250   2                  write_com(0x80+0x40+2);
 251   2                  write_data('-');      //显示正负符号位
 252   2              }
 253   1              else 
 254   1              write_com(0x80+0x40+2);
 255   1          write_data(' '); //显示空格
 256   1      
 257   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 258   1          conversion1(temp);          //转换出显示需要的数据
 259   1              
 260   1              write_com(0x80+0x40);
 261   1          write_data('Y'); 
 262   1              write_com(0x80+0x40+1);
 263   1          write_data(':');
 264   1              write_com(0x80+0x40+3);
 265   1          write_data(m+0x30);
 266   1              write_com(0x80+0x40+4);
 267   1          write_data('.');
 268   1              write_com(0x80+0x40+5);
 269   1          write_data(n+0x30);
 270   1              write_com(0x80+0x40+6);
 271   1          write_data('g');  
 272   1      }
 273          
 274          //***********************************************************************
 275          //显示z轴
 276          void display_z()
 277          {      
 278   1              float temp;
 279   1          dis_data=(BUF1[5]<<8)+BUF1[4];    //合成数据   
 280   1              if(dis_data<0)
 281   1              {
 282   2                      dis_data=-dis_data;
 283   2                  write_com(0x80+0x40+10);
 284   2                  write_data('-');       //显示负符号位
 285   2              }
 286   1              else 
 287   1              write_com(0x80+0x40+10);
 288   1          write_data(' ');  //显示空格
 289   1      
 290   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 291   1          conversion1(temp);          //转换出显示需要的数据
 292   1              
 293   1              write_com(0x80+0x40+8);
 294   1          write_data('Y'); 
 295   1              write_com(0x80+0x40+9);
 296   1          write_data(':');
 297   1              write_com(0x80+0x40+11);
 298   1          write_data(m+0x30);
 299   1              write_com(0x80+0x40+12);
 300   1          write_data('.');
 301   1              write_com(0x80+0x40+13);
 302   1          write_data(n+0x30);
 303   1              write_com(0x80+0x40+14);
C51 COMPILER V9.00   ADXL345                                                               07/28/2014 16:08:34 PAGE 6   

 304   1          write_data('g'); 
 305   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    721    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
